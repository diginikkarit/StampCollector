{"version":3,"sources":["Components/Header.js","Components/Stamp.js","Components/StampContainerData.js","Components/StampContainerImage.js","Components/StampContainer.js","Components/StampListContainer.js","Components/AboutContainer.js","Components/SummaryContainer.js","Components/EditStampForm.js","Components/DataManager.js","Components/MainWindow.js","Components/AddStampContainer.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","Component","Stamp","id","name","yearPublished","isStamped","imgUrl","country","price","this","imageUrl","parseFloat","toFixed","msg","console","log","StampContainerData","stamp","Object","assign","props","stampData","GetPriceString","String","StampImage","src","imagePath","alt","StampContainer","headerClicked","setState","showFull","state","onClick","hidden","to","pathname","StampGetStampListContainer","GetStampList","Array","from","stampCollection","map","element","key","AboutContainer","SummaryContainer","EditStampForm","nameChanged","event","stampName","target","value","priceChanged","stampPrice","countryChanged","stampCountry","yearPublishedChanged","stampYearPublished","isStampedChanged","stampIsStamped","imageUrlChanged","stampImageUrl","handleSubmit","preventDefault","stopPropagation","CheckImage","HandleStampAdding","imageOKFunction","img","Image","onload","onerror","alert","stampId","isNaN","undefined","test","ImageContainer","addStampToCollection","onSubmit","type","onChange","initDataManager","stamp1","stamp2","stamp3","stamp4","push","length","StampToConsole","index","findIndex","x","MainWindow","AddStampToCollection","dataManager","UpdateCollection","exact","path","component","App","DataManager","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e85d2550.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './MainWindow.css'\r\n\r\nexport default class Header extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n               <h2 className=\"col 3 Header\">Stamp Collector</h2> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n","class Stamp {\r\n    constructor(id,name,yearPublished,isStamped,imgUrl,country,price){\r\n        this.id = id;\r\n        this.name = name;\r\n        this.yearPublished = yearPublished;\r\n        this.isStamped = isStamped; \r\n        this.imageUrl = imgUrl;\r\n        this.country = country;\r\n        this.price = price;\r\n    }\r\n    \r\n    GetPriceString(){\r\n        return parseFloat(this.price).toFixed(2)\r\n    }\r\n\r\n    StampToConsole(){\r\n        let msg =  \"\"\r\n        msg += \"Stamp to Console :\"+this.name\r\n        msg += \"id : \"+this.id\r\n        msg += \" price:\"+this.price\r\n        msg += \" yearPublished:\"+this.yearPublished\r\n        msg += \" country:\"+this.country\r\n        msg += \" isStamped:\"+this.isStamped\r\n        console.log(msg)\r\n    }\r\n}\r\n\r\n//note. No default to export.\r\nexport {Stamp}","import React, { Component } from 'react'\r\nimport {Stamp} from './Stamp.js'\r\n\r\n\r\nexport default class StampContainerData extends Component {\r\n\r\n    render() {\r\n\r\n        var stamp = new Stamp();\r\n        Object.assign(stamp, this.props.stampData )\r\n\r\n        return (\r\n            <div className=\"StampContainerData\">\r\n                <div className=\"StampDataRowHeader\">Name</div>\r\n                <div className=\"StampDataRow\">{stamp.name}</div>\r\n\r\n                <div className=\"StampDataRowHeader\">Price</div>\r\n                <div className=\"StampDataRow\">{stamp.GetPriceString()} €</div>\r\n\r\n                <div className=\"StampDataRowHeader\">Country</div>\r\n                <div className=\"StampDataRow\">{stamp.country}</div>\r\n                \r\n\r\n                <div className=\"StampDataRowHeader\">Year Published</div>\r\n                <div className=\"StampDataRow\">{stamp.yearPublished}</div>\r\n                \r\n                <div className=\"StampDataRowHeader\">Is Stamped</div>\r\n                <div className=\"StampDataRow\">{String(stamp.isStamped)}</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class StampImage extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"StampContainerImage\">\r\n                <img src={this.props.imagePath} alt=\"StampPic\"/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './StampContainer.css'\r\nimport StampData from './StampContainerData'\r\nimport StampImage from './StampContainerImage'\r\nimport {NavLink} from 'react-router-dom'\r\n\r\nexport default class StampContainer extends Component {\r\n    \r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n            showFull:false\r\n        }\r\n    }\r\n\r\n    headerClicked = () =>{\r\n        //var showFull = !this.state.showFull\r\n        this.setState(\r\n            {showFull:!this.state.showFull}\r\n        )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"col StampContainer\" onClick={this.headerClicked}>\r\n                <div className=\"row StampContainerHeader\">\r\n                    <div className='HeaderCol col-1'  hidden={this.state.showFull}>\r\n                        <img src={this.props.stamp.imageUrl} alt=\"StampPic\"/>\r\n                    </div>\r\n                    <div className=\"HeaderCol\" >\r\n                        {this.props.stamp.name}\r\n                    </div>\r\n                    <div className=\"HeaderCol col text-right\" hidden={this.state.showFull}>\r\n                        {this.props.stamp.GetPriceString()} €\r\n                    </div>\r\n                </div>\r\n               <div className=\"row\" hidden={!this.state.showFull}>\r\n                    <div className=\"col-4\">\r\n                    <StampImage imagePath={this.props.stamp.imageUrl} />\r\n                    </div>\r\n                    <div className=\"col-8\">\r\n                    <StampData stampData = {this.props.stamp}/>\r\n                    <NavLink to={{ pathname:\"/addStamp\", stamp:this.props.stamp}}><button className=\"btn btn-primary\">Edit Stamp</button></NavLink>        \r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport StampContainer from './StampContainer'\r\n\r\nexport default class StampGetStampListContainer extends Component {\r\n    GetStampList = () => Array.from(this.props.stampCollection).map(element => {\r\n      return  <StampContainer stamp={element} key={element.id}/>\r\n    });\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.GetStampList()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class AboutContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>This is an about page. Nothing special here yet.</p>\r\n                <p>Editing stuff.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class SummaryContainer extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <p>This is summary container. There is nothing here yet.</p>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport {Stamp} from './Stamp'\r\nimport StampContainerImage from './StampContainerImage'\r\nimport './EditStampForm.css'\r\n\r\nexport default class EditStampForm extends Component {\r\n    \r\n \r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        //let stamp = this.props.stamp\r\n        \r\n        this.test = this.props.addStampToCollection\r\n        //To use this as an update form and for adding, it is needed to check is there is a \r\n        //stamp provided for editing.\r\n        console.log(\"Loaded page\")\r\n            this.state = {\r\n                stamp:this.props.stamp,\r\n                stampId:(this.props.stamp != null) ? this.props.stamp.id : \"\",\r\n                stampName:(this.props.stamp != null) ? this.props.stamp.name : \"\",\r\n                stampPrice:(this.props.stamp != null) ? this.props.stamp.price : \"\",\r\n                stampYearPublished:(this.props.stamp != null) ? this.props.stamp.yearPublished:\"\",\r\n                stampCountry:(this.props.stamp != null) ? this.props.stamp.country:\"\",\r\n                stampImageUrl:(this.props.stamp != null) ? this.props.stamp.imageUrl:\"\"\r\n                \r\n        }\r\n    }\r\n\r\n    test(){\r\n\r\n    }\r\n\r\n    SetStampToState(stamp){\r\n        \r\n        this.setState ({\r\n            stampName:stamp.name,\r\n            stampPrice:22 ,\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log(this.props.stamp)\r\n    }\r\n\r\n    nameChanged = (event) =>{\r\n        this.setState({\r\n            stampName:event.target.value\r\n        })\r\n    }\r\n\r\n    priceChanged = (event) =>{\r\n        this.setState({\r\n            stampPrice:event.target.value\r\n        })\r\n    }\r\n\r\n    countryChanged = (event) =>{\r\n        this.setState({\r\n            stampCountry:event.target.value\r\n        })\r\n    }\r\n    \r\n    yearPublishedChanged = (event) =>{\r\n        this.setState({\r\n            stampYearPublished:event.target.value\r\n        })\r\n    }\r\n\r\n    isStampedChanged = (event) =>{\r\n        this.setState({\r\n            stampIsStamped:event.target.value\r\n        })\r\n    }\r\n    \r\n    imageUrlChanged = (event) =>{\r\n       \r\n        this.setState({\r\n            stampImageUrl:event.target.value\r\n        })\r\n    }\r\n    \r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        event.stopPropagation();\r\n        this.CheckImage(this.state.stampImageUrl,this.HandleStampAdding)\r\n    }\r\n    \r\n    CheckImage = (imageUrl,imageOKFunction) =>{\r\n        var img = new Image();\r\n        img.src =imageUrl;\r\n        img.onload = () =>  {imageOKFunction()}\r\n        img.onerror=() => alert(\"Image was not valid!\")\r\n    }\r\n\r\n    HandleStampAdding = () =>{\r\n\r\n        let id = this.state.stampId;\r\n        if(id === \"\"){\r\n            id=null\r\n        }\r\n\r\n        console.log(\"Submited\")\r\n        let name = this.state.stampName\r\n        if(name === \"\"){\r\n            name=\"Stamp has no name\"\r\n        } \r\n        let price = parseFloat(this.state.stampPrice)\r\n        if(isNaN(price) === true){\r\n            console.log(\"in NaN\")\r\n            price = parseFloat(0.0)\r\n        }\r\n        this.setState(  {\r\n            stampPrice:price\r\n        })\r\n        \r\n        let yearPublished = this.state.stampYearPublished\r\n        let country = this.state.stampCountry\r\n        if(this.state.stampCountry === \"\"){\r\n            alert(\"You have to give coutry!\")\r\n            return;\r\n        }\r\n        let isStamped = this.state.stampIsStamped\r\n        if(isStamped === undefined){\r\n            isStamped = true;\r\n        } \r\n        let imgUrl = this.state.stampImageUrl\r\n        let stamp = new Stamp(id,name,yearPublished,isStamped,imgUrl,country,price)\r\n        \r\n\r\n        //this.state.addStampToCollection(stamp)\r\n        this.test(stamp)\r\n        console.log(this.props.stamp)\r\n    }\r\n\r\n    ImageContainer = () => {\r\n        if(this.state.stampImageUrl === \"\"){\r\n            return <p>no picture provided</p>\r\n        }\r\n        else{\r\n           return <StampContainerImage imagePath={this.state.stampImageUrl}/>\r\n        }\r\n    }\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                {/* image */}\r\n                <div className='row ImageRow justify-content-center'>\r\n                    \r\n                    <div className='col-4 center'>\r\n                        {this.ImageContainer()}\r\n                    </div>\r\n                </div>\r\n\r\n                {/* form */}\r\n                <div className='row'>\r\n                    <div className='col'>\r\n                        <form onSubmit={this.handleSubmit}>\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    name:\r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampName} onChange={this.nameChanged}></input>\r\n                                </div> \r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    price: \r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampPrice} onChange={this.priceChanged}></input>\r\n                                    </div> \r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    country: \r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampCountry} onChange={this.countryChanged}></input>\r\n                                </div> \r\n                            </div>\r\n\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    year Published:\r\n                                </div> \r\n                                <div className='col'>\r\n                                    <input type=\"text\" value={this.state.stampYearPublished} onChange={this.yearPublishedChanged}></input>\r\n                                </div> \r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    stamped:        \r\n                                </div> \r\n                                <div className='col'>\r\n                                    <select value={this.state.stampIsStamped} onChange={this.isStampedChanged}>\r\n                                        <option value=\"true\">true</option>\r\n                                        <option value=\"false\">false</option>\r\n                                    </select>\r\n                                </div> \r\n                            </div>\r\n                            <div className='row'>\r\n                                <div className='col'>\r\n                                    Image URL:        \r\n                                </div> \r\n                                <div className='col'>\r\n                                <input type=\"text\" value={this.state.stampImageUrl} onChange={this.imageUrlChanged}></input>\r\n\r\n                                </div> \r\n                            </div>\r\n                        <button type=\"submit\">submit</button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","//hold all the spamps\r\nimport {Stamp} from './Stamp'\r\n\r\nvar stampCollection = [];\r\n\r\nvar initDataManager = () => {\r\n\r\n    console.log(\"Data Manager initialised..!\")\r\n\r\n    var stamp1 = new Stamp(\r\n        1,\r\n        \"testiStamp 1\",\r\n        1892,\r\n        false,\r\n        'https://upload.wikimedia.org/wikipedia/commons/1/1c/War_Savings_Stamp_WWII.png',\r\n        \"U.S.A.\",\r\n        13.40\r\n    );\r\n    var stamp2 = new Stamp(\r\n        2,\r\n        \"testiStamp 2\",\r\n        1912,\r\n        true,\r\n        'https://virtualstampclub.com/lloydblog/wp-content/uploads/2015/06/57-300x202.jpg',\r\n        \"U.S.A\",\r\n        3.50);\r\n    var stamp3 = new Stamp(\r\n        3,\r\n        \"testiStamp 3\",\r\n        1922,\r\n        true,\r\n        'https://previews.123rf.com/images/vicsa/vicsa1602/vicsa160200010/53419293-moscow-russia-february-03-2016-a-stamp-printed-in-ussr-russia-shows-world-war-ii-russian-heavy-tank-.jpg',\r\n        \"USSR\",\r\n        6.00);\r\n    var stamp4 = new Stamp(\r\n            4,\r\n            \"Commander stamp\",\r\n            2016,\r\n            true,\r\n            'https://i.ebayimg.com/images/g/QHMAAOSwmcRemL85/s-l1600.jpg',\r\n            \"Djibouti\",\r\n            12.00);\r\n        \r\n\r\n        \r\n\r\n    stampCollection.push(stamp1,stamp2,stamp3,stamp4);\r\n}\r\n\r\nvar addStampToCollection = (stamp) =>{\r\n    console.log(\"Trying to add stamp to the collection\")\r\n    if(stamp.id === null){\r\n        //has no id, is new stamp\r\n        stamp.id = stampCollection.length +1;\r\n        if(stamp.StampToConsole != null) {\r\n            stamp.StampToConsole();\r\n        }\r\n        stampCollection.push(stamp)\r\n    }\r\n    else{\r\n        console.log(\"Updating stamp\")\r\n        stamp.StampToConsole();\r\n        //use splice\r\n        let index = stampCollection.findIndex( x => x.id === stamp.id)\r\n        if(index !== null){\r\n            \r\n           stampCollection[index] = stamp\r\n        }\r\n        else{\r\n            console.log(\"Something went wrong when updating the stamp.\")\r\n        }\r\n    }\r\n\r\n} \r\n\r\nexport default {stampCollection,initDataManager,addStampToCollection}","import React, { Component } from 'react'\r\n//import StampContainer from './StampContainer'\r\nimport {BrowserRouter as Router, Route,Link} from 'react-router-dom'\r\nimport StampListContainer from './StampListContainer'\r\nimport AboutContainer from './AboutContainer'\r\nimport SummaryContainer from './SummaryContainer'\r\nimport AddStampContainer from './AddStampContainer'\r\n\r\nexport default class MainWindow extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        \r\n        this.state = {\r\n             dataManager:this.props.dataManager,\r\n             stampCollection:this.props.dataManager.stampCollection\r\n        }\r\n    }\r\n\r\n    AddStampToCollection = (stamp) =>{\r\n           stamp.StampToConsole();\r\n           this.state.dataManager.addStampToCollection(stamp)\r\n          this.UpdateCollection()\r\n    }\r\n    \r\n    UpdateCollection = () => {\r\n        console.log(\"Updated collection\")\r\n        this.setState({\r\n            stampCollection:this.state.dataManager.stampCollection\r\n        })\r\n    }\r\n\r\n    render() {\r\n        var list = () => <StampListContainer stampCollection={this.state.stampCollection} />\r\n        var about = () => <AboutContainer />\r\n        var addStamp = (props) => {\r\n        return <AddStampContainer stamp={props.location.stamp} addStampToCollection={this.AddStampToCollection} />\r\n        }\r\n        var summary = () => <SummaryContainer />\r\n        return (\r\n            <div className=\"col MainWindow\">\r\n                <Router>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Link className=\"RouterLink\" to=\"/\">List</Link> |\r\n                        <Link className=\"RouterLink\" to=\"/Summary\">Summary</Link> |\r\n                        {/* <Link className=\"RouterLink\" to=\"/addStamp\">Add Stamp</Link> | */}\r\n                        <Link className=\"RouterLink\" to=\"/About\">About</Link>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <Route exact path=\"/\" component={list} />\r\n                        <Route path=\"/Summary\" component={summary} />\r\n                        {/* <Route path=\"/addStamp\" component={addStamp} /> */}\r\n                        <Route path=\"/about\" component={about} />\r\n                    </div>\r\n                </div>\r\n                </Router>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport EditStampForm from './EditStampForm'\r\nimport DataManager from './DataManager'\r\n\r\nexport default class AddStampContainer extends Component {\r\n    \r\n    render() {\r\n        return (\r\n            <div>\r\n                <EditStampForm  stamp={this.props.stamp} addStampToCollection={this.props.addStampToCollection}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\nimport Header from './Components/Header'\nimport MainWindow from './Components/MainWindow'\nimport DataManager from './Components/DataManager'\nfunction App() {\n\n  DataManager.initDataManager();\n\n  return (\n      <div className=\"App container col-10 justify-content-center\">\n        <Header/>\n        <MainWindow dataManager={DataManager}/>\n      </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}